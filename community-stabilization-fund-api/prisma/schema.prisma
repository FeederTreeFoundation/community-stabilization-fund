generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model api_key {
  id          Int       @id @default(autoincrement())
  name        String?   @db.VarChar(20)
  api_user_id Int?
  api_user    api_user? @relation(fields: [api_user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "api_key_ibfk_1")

  @@index([api_user_id], map: "api_user_id")
}

model api_user {
  id              Int      @id @default(autoincrement())
  name            String   @db.VarChar(20)
  api_key         api_key[]
  organization_id Int?
  organization    organization? @relation(fields: [organization_id], references: [id], onDelete: Cascade, map: "api_user_ibfk_1")

  @@index([organization_id], map: "organization_id")
}

model organization {
  id             Int      @id @default(autoincrement())
  name           String   @db.VarChar(50)
  short_name     String?  @db.VarChar(10)
  bag_label_type String?  @db.VarChar(40)
  api_users      api_user[]
}

model feminine_health_care {
  id               Int             @id @default(autoincrement())
  feminine_members Int
  hygiene_items    String?         @db.VarChar(250)
  needs_plan_b     Boolean
  form_response    form_response[]
}

model address {
    id Int @id @default(autoincrement())
    city String @db.VarChar(30)
    state String @db.VarChar(30)
    country String @db.VarChar(30)
    zipcode String @db.VarChar(15)
    line1 String @db.VarChar(30)
    line2 String? @db.VarChar(30)
    form_response form_response[]
}

model form_response {
  id                          Int                   @id @default(autoincrement())
  first_name                  String                @db.VarChar(20)
  last_name                   String                @db.VarChar(20)
  email                       String?               @db.VarChar(60)
  phone_number                String                @db.VarChar(15)
  phone_type                  String?               @db.VarChar(7)
  address_id                  Int?
  is_black                    Boolean
  is_local                    Boolean
  packages_to_receive         String               @db.VarChar(250)
  has_flu_symptoms            Boolean
  household_members           Int
  feminine_health_care_id     Int?
  item_requests               String?              @db.VarChar(100)
  additional_information      String?              @db.VarChar(250)
  is_pick_up                  Boolean
  is_volunteering             Boolean
  is_subscribing              Boolean
  is_joining                  Boolean?
  is_interested_in_membership Boolean
  live_in_pittsburgh_atlanta  Boolean
  live_in_southside_atlanta   Boolean
  archived                    Boolean               @default(false)
  archived_on                 DateTime?
  submitted_on                DateTime    @default(dbgenerated("NOW()")) @db.DateTime
  submitted_by                String?               @db.VarChar(20)
  elderly_members             Int?
  youth_members               Int?
  feminine_health_care        feminine_health_care? @relation(fields: [feminine_health_care_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_response_ibfk_1")
  address                     address?             @relation(fields: [address_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "form_response_ibfk_2")

  @@index([feminine_health_care_id], map: "feminine_health_care_id")
  @@index([address_id], map: "address_id")
}

model package_group {
  id         Int            @id @default(autoincrement())
  name      String
  items checklist_rule[]
}

model package_item {
  id    Int                 @id @default(autoincrement())
  name  String
  packages checklist_rule[]
}

model checklist_rule {
  id                  Int             @id @default(autoincrement())
  quantity            String
  household_members   String
  bag_label_type      String
  delayed_until       DateTime?
  days_delayed_by     Int?
  weeks_delayed_by    Int?
  package_item        package_item     @relation(fields: [package_item_id], references: [id])
  package_item_id     Int // relation scalar field (used in the `@relation` attribute above)
  package_group       package_group @relation(fields: [package_group_id], references: [id])
  package_group_id    Int // relation scalar field (used in the `@relation` attribute above)
  submitted_on        DateTime    @default(dbgenerated("NOW()")) @db.DateTime

  @@index([package_group_id], map: "package_group_id")
  @@index([package_item_id], map: "package_item_id")
}
